// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace learn.it.Models;

[Table("users", Schema = "learnitdb")]
[Index("PermissionId", Name = "fk_users_permissions1_idx")]
[Index("Email", Name = "users$email_UNIQUE", IsUnique = true)]
[Index("Username", Name = "users$username_UNIQUE", IsUnique = true)]
public partial class User
{
    [Key]
    [Column("user_id")]
    public int UserId { get; set; }

    [Column("permission_id")]
    public int PermissionId { get; set; }

    [Required(ErrorMessage = "Username cannot be blank.")]
    [Column("username")]
    [StringLength(32, ErrorMessage = "Username cannot be shorter than 3 and longer than 32 characters.", MinimumLength = 3)]
    [RegularExpression(@"^[A-Za-z][A-Za-z0-9_]*$", ErrorMessage = "Username cannot start with a number and can only contain letters, numbers and underscores.")]
    public required string Username { get; set; }

    [Required(ErrorMessage = "Email cannot be blank.")]
    [Column("email")]
    [StringLength(255, ErrorMessage = "Email cannot be longer than 255 characters.")]
    [EmailAddress]
    public required string Email { get; set; }

    [Required(ErrorMessage = "Password cannot be blank.")]
    [Column("password")]
    [StringLength(100, ErrorMessage = "Password cannot be shorter than 8 and longer than 255 characters.", MinimumLength = 8)]
    [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$", ErrorMessage = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter and one number.")]
    public required string Password { get; set; }

    [Column("create_time")]
    [Precision(0)]
    public DateTime CreateTime { get; set; }

    [Column("last_login")]
    [Precision(0)]
    public DateTime? LastLogin { get; set; }

    //this can be null - the database has a default value of "default.png"
    [Column("avatar")]
    [StringLength(100)]
    public string? Avatar { get; set; }

    [InverseProperty("User")]
    public virtual ICollection<Answer> Answers { get; set; } = new List<Answer>();

    [InverseProperty("User")]
    public virtual ICollection<FlashcardUserProgress> FlashcardUserProgress { get; set; } = new List<FlashcardUserProgress>();

    [InverseProperty("Owner")]
    public virtual ICollection<Group> Groups { get; set; } = new List<Group>();

    [InverseProperty("User")]
    public virtual ICollection<Login> Logins { get; set; } = new List<Login>();

    [ForeignKey("PermissionId")]
    [InverseProperty("User")]
    public required virtual Permission Permissions { get; set; }

    [InverseProperty("Creator")]
    public virtual ICollection<StudySet> StudySets { get; set; } = new List<StudySet>();

    [InverseProperty("User")]
    public virtual ICollection<UserAchievements> UserAchievements { get; set; } = new List<UserAchievements>();

    [InverseProperty("User")]
    public required virtual UserPreferences UserPreferences { get; set; }

    [InverseProperty("User")]
    public required virtual UserStats UserStats { get; set; }

    [ForeignKey("UserId")]
    [InverseProperty("User")]
    public virtual ICollection<Group> Group { get; set; } = new List<Group>();
}